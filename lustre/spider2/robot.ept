open Lib

fun abs(x : float) returns (r : float);
let
    r = (if (x >=. 0.0) then x else -.x);
tel
fun min(x : float ; y : float) returns (r : float);
let
    r = if x <=. y then x else y
tel

fun modulo(x : float ; y : float) returns (r : float);
var r1 : float;
let
    r1 = if x <. 0.0 then x +. y else (if x >=. y then x -. y else x);
    r = if r1 <. 0.0 then r1 +. y else (if r1 >=. y then r1 -. y else r1);
tel

fun setMotor(current : float; goal : float ; maxi : float) returns (power : float);
var delta : float;
let 
    delta = modulo(goal -. current, 360.0);
    power = if delta <. 180.0 then min(abs(delta),maxi) else -.min(abs(delta), maxi);
tel

fun setMotorFast(current : float; goal : float ; maxi : float) returns (power : float);
var delta : float;
let 
    delta = modulo(goal -. current, 360.0);
    power = if delta <. 180.0 then maxi else -.maxi;
tel


node robot(dt : float;
           hipLangle : float;
           hipRangle : float;
           kneeLangle : float;
           kneeRangle : float;
           gyroscope : float;
           calfLdistance : float;
           calfRdistance : float;
           footLcontact : bool;
           footRcontact : bool)
returns (  hipLspeed : float;
           hipRspeed : float;
           kneeLspeed : float;
           kneeRspeed : float);
let
    automaton
        state In_the_sky
            do
                hipLspeed = setMotorFast(hipLangle, -.30.0, 100.0);
                hipRspeed = setMotorFast(hipRangle, 30.0, 100.0);
                kneeLspeed = setMotorFast(kneeLangle, 80.0, 100.0);
                kneeRspeed = setMotorFast(kneeRangle, -.80.0, 100.0);
            until calfLdistance <=. 0.04 and calfRdistance <=. 0.04 then On_the_ground
 
        state On_the_ground
            do
                hipLspeed = setMotor(hipLangle, -.40.0, 60.0);
                hipRspeed = setMotor(hipRangle, 40.0, 60.0);
                kneeLspeed = setMotor(kneeLangle, 100.0, 60.0);
                kneeRspeed = setMotor(kneeRangle, -.100.0, 60.0);
            until hipLspeed <=. 1.0 and hipRspeed <=. 1.0 and kneeLspeed <=. 1.0 and kneeRspeed <=. 1.0 then Jump
        
        state Jump
            do
                hipLspeed = setMotorFast(hipLangle, 90.0, 1000.0);
                hipRspeed = setMotorFast(hipRangle, -.90.0, 1000.0);
                kneeLspeed = setMotorFast(kneeLangle +. hipLangle +. gyroscope, 90.0, 1000.0);
                kneeRspeed = setMotorFast(kneeRangle +. hipRangle +. gyroscope, -.90.0, 1000.0);
            until calfLdistance >=. 0.04 and calfRdistance >=. 0.04 then In_the_sky
   end;
tel
